{"version":3,"sources":["components/Search.js","components/AddAppointment.js","components/AppointmentInfo.js","App.js","index.js"],"names":["DropDown","toggle","sortBy","onSortByChange","orderBy","onOrderByChange","className","role","aria-orientation","aria-labelledby","onClick","Search","query","onQueryChange","useState","toggleSort","setToggleSort","htmlFor","type","name","id","value","onChange","event","target","placeholder","aria-haspopup","aria-expanded","mySort","myOrder","AddAppointment","onSendAppointment","lastId","clearData","Dep","Name","aptDate","aptTime","aptNotes","toggleForm","setToggleForm","formData","setFormData","rows","appointmentInfo","AppointmentInfo","appointment","onDeleteAppointment","App","appointmentList","setAppointmentList","setQuery","setSortBy","setOrderBy","filteredAppointments","filter","item","toLowerCase","includes","sort","a","b","order","fetchData","useCallback","fetch","then","response","json","data","useEffect","class","src","alt","title","href","myAppointment","reduce","max","Number","myQuery","map","appointmentId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4c82190.chunk.js","sourcesContent":["import { BiSearch, BiCaretDown, BiCheck } from \"react-icons/bi\"\r\nimport { useState } from 'react';\r\n\r\nconst DropDown = ({ toggle, sortBy, onSortByChange, orderBy, onOrderByChange }) => {\r\n  if (!toggle) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"origin-top-right absolute right-0 mt-2 w-56\r\n      rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\">\r\n      <div className=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\r\n        <div onClick={() => onSortByChange('Name')}\r\n          className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n          role=\"menuitem\">Item Name {(sortBy === 'Name') && <BiCheck />}</div>\r\n        <div onClick={() => onSortByChange('Dep')}\r\n          className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n          role=\"menuitem\">Department Name {(sortBy === 'Dep') && <BiCheck />}</div>\r\n        <div onClick={() => onSortByChange('aptDate')}\r\n          className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n          role=\"menuitem\">Date {(sortBy === 'aptDate') && <BiCheck />}</div>\r\n        <div onClick={() => onOrderByChange('asc')}\r\n          className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer border-gray-1 border-t-2\"\r\n          role=\"menuitem\">Asc {(orderBy === 'asc') && <BiCheck />}</div>\r\n        <div onClick={() => onOrderByChange('desc')}\r\n          className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n          role=\"menuitem\">Desc {(orderBy === 'desc') && <BiCheck />}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Search = ({ query, onQueryChange, sortBy, onSortByChange, orderBy, onOrderByChange }) => {\r\n  let [toggleSort, setToggleSort] = useState(false);\r\n  return (\r\n    <div className=\"py-5\">\r\n      <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n          <BiSearch />\r\n          <label htmlFor=\"query\" className=\"sr-only\" />\r\n        </div>\r\n        <input type=\"text\" name=\"query\" id=\"query\" value={query}\r\n          onChange={(event) => { onQueryChange(event.target.value) }}\r\n          className=\"pl-8 rounded-md focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300\" placeholder=\"Search\" />\r\n        <div className=\"absolute inset-y-0 right-0 flex items-center\">\r\n          <div>\r\n            <button type=\"button\" onClick={() => { setToggleSort(!toggleSort) }}\r\n              className=\"justify-center px-4 py-2 bg-blue-400 border-2 border-blue-400 text-sm text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 flex items-center\" id=\"options-menu\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n              Sort By <BiCaretDown className=\"ml-2\" />\r\n            </button>\r\n            <DropDown toggle={toggleSort}\r\n              sortBy={sortBy}\r\n              onSortByChange={mySort => onSortByChange(mySort)}\r\n              orderBy={orderBy}\r\n              onOrderByChange={myOrder => onOrderByChange(myOrder)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search","import { BiCalendarPlus } from \"react-icons/bi\";\r\nimport { useState } from 'react';\r\n\r\nconst AddAppointment = ({ onSendAppointment, lastId }) => {\r\n  const clearData = {\r\n    Dep: '',\r\n    Name: '',\r\n    aptDate: '',\r\n    aptTime: '',\r\n    aptNotes: ''\r\n  }\r\n  let [toggleForm, setToggleForm] = useState(false)\r\n  let [formData, setFormData] = useState(clearData)\r\n\r\n  function formDataPublish() {\r\n    const appointmentInfo = {\r\n      id: lastId + 1,\r\n      Dep: formData.Dep,\r\n      Name: formData.Name,\r\n      aptDate: formData.aptDate + ' ' + formData.aptTime,\r\n      aptNotes: formData.aptNotes\r\n    }\r\n    onSendAppointment(appointmentInfo);\r\n    setFormData(clearData);\r\n    setToggleForm(!toggleForm)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => { setToggleForm(!toggleForm) }}\r\n        className={`bg-blue-400 text-white px-2 py-3 w-full text-left rounded-b-md\r\n        ${toggleForm ? 'rounded-t-md' : 'rounded-b-md'}`}>\r\n        <div><BiCalendarPlus className=\"inline-block align-text-top\" />  Add Items</div>\r\n      </button>\r\n      {\r\n        toggleForm &&\r\n        <div className=\"border-r-2 border-b-2 border-l-2 border-light-blue-500 rounded-b-md pl-4 pr-4 pb-4\">\r\n          <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n            <label htmlFor=\"Dep\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n              Item Name\r\n          </label>\r\n            <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n              <input type=\"text\" name=\"Dep\" id=\"Dep\"\r\n                onChange={(event) => { setFormData({ ...formData, Dep: event.target.value }) }}\r\n                value={formData.Dep}\r\n                className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n            <label htmlFor=\"Name\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n              Department Name\r\n          </label>\r\n            <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n              <input type=\"text\" name=\"Name\" id=\"Name\"\r\n                onChange={(event) => { setFormData({ ...formData, Name: event.target.value }) }}\r\n                value={formData.Name}\r\n                className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n            <label htmlFor=\"aptDate\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n              Request Date\r\n          </label>\r\n            <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n              <input type=\"date\" name=\"aptDate\" id=\"aptDate\"\r\n                onChange={(event) => { setFormData({ ...formData, aptDate: event.target.value }) }}\r\n                value={formData.aptDate}\r\n                className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n            <label htmlFor=\"aptTime\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n            Request Time\r\n          </label>\r\n            <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n              <input type=\"time\" name=\"aptTime\" id=\"aptTime\"\r\n                onChange={(event) => { setFormData({ ...formData, aptTime: event.target.value }) }}\r\n                value={formData.aptTime}\r\n                className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n            <label htmlFor=\"aptNotes\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n               Notes\r\n          </label>\r\n            <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n              <textarea id=\"aptNotes\" name=\"aptNotes\" rows=\"3\"\r\n                onChange={(event) => { setFormData({ ...formData, aptNotes: event.target.value }) }}\r\n                value={formData.aptNotes}\r\n                className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border-gray-300 rounded-md\" placeholder=\"Any specification about the item like the brand or such...\"></textarea>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"pt-5\">\r\n            <div className=\"flex justify-end\">\r\n              <button type=\"submit\" onClick={formDataPublish} className=\"ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-400 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-400\">\r\n                Submit\r\n            </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddAppointment","import { BiTrash } from \"react-icons/bi\"\r\n\r\nconst AppointmentInfo = ({ appointment, onDeleteAppointment }) => {\r\n  return (\r\n    <li className=\"px-3 py-3 flex items-start\">\r\n      <button onClick={() => onDeleteAppointment(appointment.id)} type=\"button\"\r\n        className=\"p-1.5 mr-1.5 mt-1 rounded text-white bg-red-500 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\r\n        <BiTrash /></button>\r\n      <div className=\"flex-grow\">\r\n        <div className=\"flex items-center\">\r\n          <span className=\"flex-none font-medium text-2xl text-blue-500\">{appointment.Name}</span>\r\n          <span className=\"flex-grow text-right\">{appointment.aptDate}</span>\r\n        </div>\r\n        <div><b className=\"font-bold text-blue-500\">Department:</b> {appointment.Dep}</div>\r\n        <div className=\"leading-tight\">{appointment.aptNotes}</div>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default AppointmentInfo","import { useState, useEffect, useCallback } from 'react'\r\n// import { BiCalendar } from \"react-icons/bi\"\r\nimport Search from \"./components/Search\"\r\nimport AddAppointment from \"./components/AddAppointment\"\r\nimport AppointmentInfo from \"./components/AppointmentInfo\"\r\n\r\nfunction App() {\r\n\r\n  let [appointmentList, setAppointmentList] = useState([]);\r\n  let [query, setQuery] = useState(\"\");\r\n  let [sortBy, setSortBy] = useState(\"Name\");\r\n  let [orderBy, setOrderBy] = useState(\"asc\");\r\n\r\n  const filteredAppointments = appointmentList.filter(\r\n    item => {\r\n      return (\r\n        item.Name.toLowerCase().includes(query.toLowerCase()) ||\r\n        item.Dep.toLowerCase().includes(query.toLowerCase()) ||\r\n        item.aptNotes.toLowerCase().includes(query.toLowerCase())\r\n      )\r\n    }\r\n  ).sort((a, b) => {\r\n    let order = (orderBy === 'asc') ? 1 : -1;\r\n    return (\r\n      a[sortBy].toLowerCase() < b[sortBy].toLowerCase()\r\n        ? -1 * order : 1 * order\r\n    )\r\n  })\r\n\r\n  const fetchData = useCallback(() => {\r\n    fetch('./data.json')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setAppointmentList(data)\r\n      });\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [fetchData]);\r\n\r\n  return (\r\n    <div className=\"App container mx-auto mt-3 font-thin\">\r\n      <div class=\"h-28 bg-gradient-to-r from-purple-500 to-pink-500 rounded-t-md \">  \r\n      <img  className=\"ml-1 w-10 \" src=\"/payam.png\" alt=\"d\" title=\"d\"></img>\r\n      <h1 className=\" text-5xl mb-3\">\r\n \r\n {/* <BiCalendar className=\"inline-block text-red-400 align-top\" /> */}\r\n <a className=\"ml-2 text-blue-800\" title= \"Please visit my portal page!\" href=\"https://www.pamiranindustries.com/author.html\">Payam</a>'s Order List</h1></div>\r\n\r\n      <AddAppointment\r\n        onSendAppointment={myAppointment => setAppointmentList([...appointmentList, myAppointment])}\r\n        lastId={appointmentList.reduce((max, item) => Number(item.id) > max ? Number(item.id) : max, 0)}\r\n      />\r\n      <Search query={query}\r\n        onQueryChange={myQuery => setQuery(myQuery)}\r\n        orderBy={orderBy}\r\n        onOrderByChange={mySort => setOrderBy(mySort)}\r\n        sortBy={sortBy}\r\n        onSortByChange={mySort => setSortBy(mySort)}\r\n      />\r\n\r\n      <ul className=\"divide-y divide-gray-200\">\r\n        {filteredAppointments\r\n          .map(appointment => (\r\n            <AppointmentInfo key={appointment.id}\r\n              appointment={appointment}\r\n              onDeleteAppointment={\r\n                appointmentId =>\r\n                  setAppointmentList(appointmentList.filter(appointment =>\r\n                    appointment.id !== appointmentId))\r\n              }\r\n            />\r\n          ))\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}